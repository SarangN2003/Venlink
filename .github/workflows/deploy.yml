name: Deploy to AWS Fargate

on:
  push:
    branches:
      - master  # Trigger the action on push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
        docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_NAME }} .

    - name: Tag Docker image
      run: |
        docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:latest \
        ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      CLUSTER_NAME: "VenlinkLogin"  # Correct ECS Cluster Name
      ECS_SERVICE_NAME: "venlinkservices"  # Correct ECS Service Name
      TASK_DEFINITION_NAME: "VenlinkTask"  # Task Definition Family Name (without revision)

    steps:
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get latest task definition revision
      id: get-task-definition
      run: |
        LATEST_TASK_DEF=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME)
        echo "$LATEST_TASK_DEF" > task-def.json

    - name: Modify task definition with correct roles
      id: update-task-definition
      run: |
        NEW_TASK_DEF=$(jq '.taskDefinition | 
          del(.taskDefinitionArn, .revision, .status, .registeredAt, .registeredBy, .requiresAttributes, .compatibilities) |
          .taskRoleArn = "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/VenlinkFargateRole" |
          .executionRoleArn = "arn:aws:iam::${{ secrets.A
